{"ast":null,"code":"var _jsxFileName = \"/Users/tinazhang/Desktop/my-app/src/events.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { Grid, Box, Typography,\n// styled,\nButton, CardMedia, CardContent, CardActions, Card } from \"@mui/material\";\nimport add from \"./images/add.png\";\nimport * as React from \"react\";\nimport EventModal from \"./eventModal\";\nimport { mockEvents } from \"./mockEvents\";\n\n// const StyledSnackbarProvider = styled(CardActions)(({ theme }) => ({\n//   \"&.SnackbarItem-contentRoot\": {\n\n//   },\n// }));\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Events() {\n  _s();\n  const [visibleCardId, setVisibleCardId] = React.useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Box, {\n    padding: 4,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      padding: 2,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Events this week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [mockEvents.map(mockEvent => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              height: 300\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              sx: {\n                height: 140\n              },\n              image: mockEvent.image,\n              title: \"green iguana\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"h5\",\n                component: \"div\",\n                children: mockEvent.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: mockEvent.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              paddingLeft: \"135px\",\n              children: /*#__PURE__*/_jsxDEV(CardActions, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  onClick: () => setVisibleCardId(mockEvent.id),\n                  children: \"Learn More\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EventModal, {\n          description: mockEvent.description,\n          open: visibleCardId === mockEvent.id,\n          setVisibleCardId: setVisibleCardId,\n          name: mockEvent.name,\n          date: mockEvent.date,\n          image: mockEvent.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            maxWidth: 345\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            sx: {\n              height: 140\n            },\n            image: add,\n            title: \"green iguana\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h5\",\n              component: \"div\",\n              children: \"Create your new event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"New\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              children: \"Create a new event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Events, \"97v0d2faLlM2RoxFT0p7Sc7CWC8=\");\n_c = Events;\nexport default Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["Grid","Box","Typography","Button","CardMedia","CardContent","CardActions","Card","add","React","EventModal","mockEvents","jsxDEV","_jsxDEV","Fragment","_Fragment","Events","_s","visibleCardId","setVisibleCardId","useState","padding","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","mockEvent","item","xs","sx","height","image","title","gutterBottom","component","name","color","location","paddingLeft","size","onClick","id","description","open","date","maxWidth","_c","$RefreshReg$"],"sources":["/Users/tinazhang/Desktop/my-app/src/events.js"],"sourcesContent":["import \"./App.css\";\nimport {\n  Grid,\n  Box,\n  Typography,\n  // styled,\n  Button,\n  CardMedia,\n  CardContent,\n  CardActions,\n  Card,\n} from \"@mui/material\";\nimport add from \"./images/add.png\";\nimport * as React from \"react\";\nimport EventModal from \"./eventModal\";\nimport { mockEvents } from \"./mockEvents\";\n\n// const StyledSnackbarProvider = styled(CardActions)(({ theme }) => ({\n//   \"&.SnackbarItem-contentRoot\": {\n\n//   },\n// }));\n\nfunction Events() {\n  const [visibleCardId, setVisibleCardId] = React.useState(\"\");\n\n  return (\n    <Box padding={4}>\n      <Box padding={2}>\n        <Typography variant=\"h6\">Events this week</Typography>\n      </Box>\n      <Grid container spacing={2}>\n        {mockEvents.map((mockEvent) => (\n          <>\n            <Grid item xs={3}>\n              <Card sx={{ height: 300 }}>\n                <CardMedia\n                  sx={{ height: 140 }}\n                  image={mockEvent.image}\n                  title=\"green iguana\"\n                />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"div\">\n                    {mockEvent.name}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {mockEvent.location}\n                  </Typography>\n                </CardContent>\n                <Box paddingLeft=\"135px\">\n                  <CardActions>\n                    <Button\n                      size=\"small\"\n                      onClick={() => setVisibleCardId(mockEvent.id)}\n                    >\n                      Learn More\n                    </Button>\n                  </CardActions>\n                </Box>\n              </Card>\n            </Grid>\n            <EventModal\n              description={mockEvent.description}\n              open={visibleCardId === mockEvent.id}\n              setVisibleCardId={setVisibleCardId}\n              name={mockEvent.name}\n              date={mockEvent.date}\n              image={mockEvent.image}\n            />\n          </>\n        ))}\n        <Grid item xs={3}>\n          <Card sx={{ maxWidth: 345 }}>\n            <CardMedia sx={{ height: 140 }} image={add} title=\"green iguana\" />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                Create your new event\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                New\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button size=\"small\">Create a new event</Button>\n            </CardActions>\n          </Card>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default Events;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}