{"ast":null,"code":"var _jsxFileName = \"/Users/tinazhang/Desktop/my-app/src/events.js\";\nimport \"./App.css\";\nimport { Grid, Box, Typography, Button, CardMedia, CardContent, CardActions, Card } from \"@mui/material\";\nimport * as React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockEvents = [{\n  name: \"event1\",\n  description: \"my fun event\"\n}, {\n  name: \"event2\",\n  description: \"my cool event\"\n}, {\n  name: \"event3\",\n  description: \"my event\"\n}, {\n  name: \"event4\",\n  description: \"fun event\"\n}, {\n  name: \"event5\",\n  description: \"very fun event\"\n}];\nfunction Events() {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    padding: 4,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      padding: 2,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Events this week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: mockEvents.map(mockEvent => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            maxWidth: 345\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            sx: {\n              height: 140\n            },\n            image: \"/static/images/cards/contemplative-reptile.jpg\",\n            title: \"green iguana\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h5\",\n              component: \"div\",\n              children: mockEvent.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: mockEvent.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              children: \"Learn More\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c = Events;\nexport default Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["Grid","Box","Typography","Button","CardMedia","CardContent","CardActions","Card","React","jsxDEV","_jsxDEV","mockEvents","name","description","Events","padding","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","mockEvent","item","xs","sx","maxWidth","height","image","title","gutterBottom","component","color","size","_c","$RefreshReg$"],"sources":["/Users/tinazhang/Desktop/my-app/src/events.js"],"sourcesContent":["import \"./App.css\";\n\nimport {\n  Grid,\n  Box,\n  Typography,\n  Button,\n  CardMedia,\n  CardContent,\n  CardActions,\n  Card,\n} from \"@mui/material\";\n\nimport * as React from \"react\";\n\nconst mockEvents = [\n  { name: \"event1\", description: \"my fun event\" },\n  { name: \"event2\", description: \"my cool event\" },\n  { name: \"event3\", description: \"my event\" },\n  { name: \"event4\", description: \"fun event\" },\n  { name: \"event5\", description: \"very fun event\" },\n];\n\nfunction Events() {\n  return (\n    <Box padding={4}>\n      <Box padding={2}>\n        <Typography variant=\"h6\">Events this week</Typography>\n      </Box>\n      <Grid container spacing={2}>\n        {mockEvents.map((mockEvent) => (\n          <Grid item xs={3}>\n            <Card sx={{ maxWidth: 345 }}>\n              <CardMedia\n                sx={{ height: 140 }}\n                image=\"/static/images/cards/contemplative-reptile.jpg\"\n                title=\"green iguana\"\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"div\">\n                  {mockEvent.name}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {mockEvent.description}\n                </Typography>\n              </CardContent>\n              <CardActions>\n                <Button size=\"small\">Learn More</Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n}\n\nexport default Events;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}